/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package awaball;

import awaball.classes.KeyGenerate;
import java.io.File;
import java.security.KeyPair;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.SecretKey;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Awa Ball
 */
public class GenerationCles extends javax.swing.JInternalFrame {

    /**
     * Creates new form GenerationCles
     */
    public GenerationCles() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI b = (BasicInternalFrameUI) this.getUI();
        b.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        typeCle = new javax.swing.JComboBox<>();
        algo = new javax.swing.JComboBox<>();
        tailleCle = new javax.swing.JComboBox<>();
        generate = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(890, 608));

        typeCle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        typeCle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Type de Clés", "Symetrique", "Asymetrique" }));
        typeCle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeCleActionPerformed(evt);
            }
        });

        algo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        algo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Algorithme", "" }));
        algo.setEnabled(false);
        algo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algoActionPerformed(evt);
            }
        });

        tailleCle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tailleCle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Taille de Clé", " " }));
        tailleCle.setEnabled(false);
        tailleCle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tailleCleActionPerformed(evt);
            }
        });

        generate.setBackground(new java.awt.Color(0, 153, 255));
        generate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        generate.setForeground(new java.awt.Color(255, 255, 255));
        generate.setText("Generer");
        generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tailleCle, 0, 246, Short.MAX_VALUE)
                    .addComponent(typeCle, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 219, Short.MAX_VALUE)
                .addComponent(algo, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(generate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(360, 360, 360))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(141, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeCle, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(algo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addComponent(tailleCle, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(generate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeCleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeCleActionPerformed
        // TODO add your handling code here:
        String algoSymetrique [] = {"Algorithme Symetrique", "AES", "DES"};
        String algoAsymetrique [] = {"Algorithme Asymetrique", "RSA", "DSA"};
        String algorithm [] = {"Algorithme"};
        
        String typeCles = (String) typeCle.getSelectedItem();
        if (typeCles.equals("Symetrique")) {
            algo.setModel(new javax.swing.DefaultComboBoxModel<>(algoSymetrique));
            algo.setEnabled(true);
            tailleCle.setEnabled(false);
            
        } else if (typeCles.equals("Asymetrique")) {
            algo.setModel(new javax.swing.DefaultComboBoxModel<>(algoAsymetrique));
            algo.setEnabled(true);
            tailleCle.setEnabled(false);
            
        }
        else{
            algo.setModel(new javax.swing.DefaultComboBoxModel<>(algorithm));
            tailleCle.setEnabled(false);
        }
    }//GEN-LAST:event_typeCleActionPerformed

    private void algoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algoActionPerformed
        // TODO add your handling code here:
        String CleAES [] = {"128", "192", "256"};
        String CleDES [] = {"56"};
        String CleRSA [] = {"1024", "2048", "4096"};
        String CleDSA [] = {"512", "1024"};
        String Cle [] = {"Taille de clé"};
        
        String algorithmes = (String) algo.getSelectedItem();
         if (algorithmes.equals("AES")) {
            tailleCle.setModel(new javax.swing.DefaultComboBoxModel<>(CleAES));
            tailleCle.setEnabled(true);
            
        } else if (algorithmes.equals("DES")) {
            tailleCle.setModel(new javax.swing.DefaultComboBoxModel<>(CleDES));
            tailleCle.setEnabled(true);
            
        }
        else if (algorithmes.equals("RSA")) {
            tailleCle.setModel(new javax.swing.DefaultComboBoxModel<>(CleRSA));
            tailleCle.setEnabled(true);
            
        }
        else if (algorithmes.equals("DSA")) {
            tailleCle.setModel(new javax.swing.DefaultComboBoxModel<>(CleDSA));
            tailleCle.setEnabled(true);
            
        }
        else{
            tailleCle.setModel(new javax.swing.DefaultComboBoxModel<>(Cle));
            tailleCle.setEnabled(false);
        } 
        
    }//GEN-LAST:event_algoActionPerformed

    private void tailleCleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tailleCleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tailleCleActionPerformed

    private void generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateActionPerformed
        // TODO add your handling code here:
        String algos = (String) algo.getSelectedItem();
        int taille = Integer.parseInt((String) tailleCle.getSelectedItem()) ;
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showSaveDialog(jPanel1);
        File file = fileChooser.getSelectedFile();
        String path=file.getAbsolutePath();
        String typeCles=(String) typeCle.getSelectedItem();
        if (typeCles.equals("Symetrique")) {
            try {
                SecretKey key = KeyGenerate.genKeySymetrique(algos, taille);
                KeyGenerate.saveKey(key, path);
                JOptionPane.showMessageDialog(rootPane, "Clé générée avec succés");
            } catch (Exception ex) {
                Logger.getLogger(GenerationCles.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else  if (typeCles.equals("Asymetrique")){
            KeyPair kp;
            try {
                kp = KeyGenerate.genKeyAsymetrique(algos, taille);
                KeyGenerate.saveKey(kp, path);
                JOptionPane.showMessageDialog(rootPane, "Paire de clés générée avec succés");
            } catch (Exception ex) {
                Logger.getLogger(GenerationCles.class.getName()).log(Level.SEVERE, null, ex);
            }
          
        }
        
    }//GEN-LAST:event_generateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> algo;
    private javax.swing.JButton generate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> tailleCle;
    private javax.swing.JComboBox<String> typeCle;
    // End of variables declaration//GEN-END:variables
}

