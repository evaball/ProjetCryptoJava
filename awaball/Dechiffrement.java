/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package awaball;

import awaball.classes.ChiffrementDechiffrementAsymetrique;
import awaball.classes.ChiffrementDechiffrementSymetrique;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Awa Ball
 */
public class Dechiffrement extends javax.swing.JInternalFrame {

    /**
     * Creates new form GenerationCles
     */
    public Dechiffrement() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI b = (BasicInternalFrameUI) this.getUI();
        b.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        messageUpload = new javax.swing.JButton();
        message = new javax.swing.JTextField();
        keyUpload = new javax.swing.JButton();
        key = new javax.swing.JTextField();
        cipher = new javax.swing.JButton();
        algorithme = new javax.swing.JComboBox<>();
        typeDechiffrement = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(890, 608));

        messageUpload.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        messageUpload.setText("Selectionner le chiffré");
        messageUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageUploadActionPerformed(evt);
            }
        });

        message.setEditable(false);
        message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageActionPerformed(evt);
            }
        });

        keyUpload.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        keyUpload.setText("Selectionner la clé");
        keyUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyUploadActionPerformed(evt);
            }
        });

        key.setEditable(false);
        key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyActionPerformed(evt);
            }
        });

        cipher.setBackground(new java.awt.Color(0, 51, 255));
        cipher.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cipher.setForeground(new java.awt.Color(255, 255, 255));
        cipher.setText("Dechiffrer");
        cipher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cipherActionPerformed(evt);
            }
        });

        algorithme.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        algorithme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Algorithme ", "AES", "DES" }));
        algorithme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algorithmeActionPerformed(evt);
            }
        });

        typeDechiffrement.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        typeDechiffrement.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dechiffrement", "Symetrique", "Asymetrique", " " }));
        typeDechiffrement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeDechiffrementActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeDechiffrement, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(algorithme, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(messageUpload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(keyUpload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(cipher, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(typeDechiffrement, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(algorithme, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(messageUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cipher, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void messageUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(jPanel1);
        File file = fileChooser.getSelectedFile();
        String fichier = file.getAbsolutePath();
        message.setText(fichier);

    }//GEN-LAST:event_messageUploadActionPerformed

    private void messageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageActionPerformed

    private void keyUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(jPanel1);
        File file = fileChooser.getSelectedFile();
        String cle = file.getAbsolutePath();
        key.setText(cle);
    }//GEN-LAST:event_keyUploadActionPerformed

    private void keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_keyActionPerformed

    private void cipherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cipherActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showSaveDialog(jPanel1);
        File file = fileChooser.getSelectedFile();
        String path =  file.getAbsolutePath();
        String cipher = message.getText();
        String clef = key.getText();
        String algo = (String) algorithme.getSelectedItem();
        
        if (typeDechiffrement.getSelectedItem().equals("Symetrique")){
            try {
            ChiffrementDechiffrementSymetrique.decrypterFichier(algo, clef, cipher, path);
            JOptionPane.showMessageDialog(rootPane, "Message Déchiffré");
        } catch (Exception ex) {
            Logger.getLogger(Chiffrement.class.getName()).log(Level.SEVERE, null, ex);
        } 
           
        }
        else if (typeDechiffrement.getSelectedItem().equals("Asymetrique")){
            try {
            ChiffrementDechiffrementAsymetrique.decrypt(algo, clef, cipher, path);
            JOptionPane.showMessageDialog(rootPane, "Message Déchiffré");
        } catch (Exception ex) {
            Logger.getLogger(Chiffrement.class.getName()).log(Level.SEVERE, null, ex);
        } 
        }
       
        

    }//GEN-LAST:event_cipherActionPerformed

    private void algorithmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algorithmeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_algorithmeActionPerformed

    private void typeDechiffrementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeDechiffrementActionPerformed
        // TODO add your handling code here:
        String algoSymetrique [] = {"Algorithme", "AES", "DES"};
        String algoAsymetrique [] = {"Algorithme", "RSA"};
        String choix = (String) typeDechiffrement.getSelectedItem();
        if (choix.equals("Symetrique")){
            keyUpload.setText("Clé Secréte");
            algorithme.setModel(new javax.swing.DefaultComboBoxModel<>(algoSymetrique));
        }
        else if (choix.equals("Asymetrique")){
            keyUpload.setText("Clé Privée");
            algorithme.setModel(new javax.swing.DefaultComboBoxModel<>(algoAsymetrique));

        }

    }//GEN-LAST:event_typeDechiffrementActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> algorithme;
    private javax.swing.JButton cipher;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField key;
    private javax.swing.JButton keyUpload;
    private javax.swing.JTextField message;
    private javax.swing.JButton messageUpload;
    private javax.swing.JComboBox<String> typeDechiffrement;
    // End of variables declaration//GEN-END:variables
}
